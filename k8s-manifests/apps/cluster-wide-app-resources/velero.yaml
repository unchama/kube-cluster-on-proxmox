apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: velero
  namespace: argocd
  finalizers:
    - resources-finalizer.argocd.argoproj.io # cascade deletion on this App deletion
spec:
  project: cluster-wide-apps
  source:
    chart: velero
    repoURL: https://vmware-tanzu.github.io/helm-charts
    # https://github.com/vmware-tanzu/helm-charts/blob/main/charts/velero/Chart.yaml#L6
    targetRevision: 4.0.3
    helm:
      releaseName: velero
      # https://github.com/vmware-tanzu/helm-charts/blob/main/charts/velero/values.yaml
      values: |
        initContainers:
        - name: velero-plugin-for-csi
          image: velero/velero-plugin-for-csi:v0.5.0
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - mountPath: /target
              name: plugins
        - name: velero-plugin-for-aws
          image: velero/velero-plugin-for-aws:v1.7.0
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - mountPath: /target
              name: plugins
        metrics:
          serviceMonitor:
            enabled: true
        cleanUpCRDs: true
        configuration:
          backupStorageLocation:
          - name: default
            provider: aws
            bucket: minio-for-velero
            accessMode: ReadWrite
            credential:
              name: minio-for-velero-access-credential
              key: cloud
            config:
              region: minio 
              s3ForcePathStyle: true
              # 以下に指定するS3エンドポイントはクラスターネットワーク外に配置された
              # velero-clientからもアクセスされるため
              # クラスター外からもアクセス可能なURLを指定すること
              s3Url: http://172.16.3.243:9000
          volumeSnapshotLocation:
          - name: default
            provider: csi
          defaultBackupStorageLocation: default
          defaultVolumeSnapshotLocations: csi:default
          defaultVolumesToFsBackup: true
          features: EnableCSI
        credentials:
          useSecret: true
          name: minio-for-velero-access-credential
          secretContents:
            cloud: |
              [default]
              aws_access_key_id = iamrootuser
              aws_secret_access_key = t0p-Secret
        backupsEnabled: true
        # If use volume-snapshot on synology, set true
        snapshotsEnabled: false
        deployNodeAgent: true
        nodeAgent:
          podVolumePath: /var/lib/kubelet/pods
          privileged: true
          resources:
            requests:
              cpu: 500m
              memory: 512Mi
            limits:
              cpu: 1000m
              memory: 1024Mi
        schedules:
          mc-test-bkup:
            schedule: "*/10 * * * *"
            template:
              ttl: "24h"
              storageLocation: default
              includedNamespaces:
              - mc-test
  destination:
    server: https://kubernetes.default.svc
    namespace: velero
  syncPolicy:
    automated:
      prune: true
    syncOptions:
    - CreateNamespace=true
